# disbale Spring banner
spring.main.banner-mode=off

# configuration to avoid exception when Lazy fetch is used
spring.jackson.serialization.fail-on-empty-beans=false

# Loads SQL scripts? schema.sql and data.sql
spring.datasource.initialize=false

# DataSource settings: MySQL 5.7 Database
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url = jdbc:mysql://localhost:3306/bookstore_db?zeroDateTimeBehavior=convertToNull
spring.datasource.username = root
spring.datasource.password = 1q2w3e
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# HikariCP settings
spring.datasource.hikari.connection-timeout=3000
spring.datasource.hikari.maximum-pool-size=10

# Show or not log for each sql query
# spring.jpa.show-sql = true

# Hibernate ddl auto (none, validade, create, create-drop, update)
spring.jpa.hibernate.ddl-auto = validate

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.http.multipart.max-file-size=5MB
spring.http.multipart.max-request-size=5MB

log4j.logger.org.springframework=INFO

# Define the root logger with appender file
log4j.rootLogger = DEBUG, stdout